package $!{package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.dev.mybatisPlus.util.AjaxResult;
import org.apache.ibatis.annotations.Delete;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.util.CollectionUtils;
import javax.validation.Valid;
import com.github.pagehelper.PageHelper;
import com.dev.mybatisPlus.util.page.PageDomain;
import com.dev.mybatisPlus.util.page.TableDataInfo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import java.util.List;
import java.util.Arrays;
import java.util.Objects;
import java.util.ArrayList;
import $!{package.Service}.$!{table.serviceName};
import $!{package.Entity}.$!{table.entityName};

#if(${superControllerClassPackage})
import $!{superControllerClassPackage};
#end

/**
 *
 *  $!{table.comment} 前端控制器
 *
 * @author: $!{author}
 * @date: $!{date}
 */
@RestController
@RequestMapping({"#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end"})
#if(${kotlin})
class $!{table.controllerName}#if(${superControllerClass}) : $!{superControllerClass}()#end
#else
#if($!{swagger2})
@Api(tags = "$!{table.comment}管理")
#end
#if(${superControllerClass})
public class $!{table.controllerName} extends $!{superControllerClass} {
#else
public class $!{table.controllerName} {
#end

    @Autowired
    private $!{table.serviceName} service;

    #if($!{swagger2})
    @ApiOperation(value = "$!{table.comment}列表查询")
    #end
    @GetMapping({"list"})
    public AjaxResult list($!{table.entityName} entity){
        QueryWrapper<$!{table.entityName}> qw = new QueryWrapper<$!{table.entityName}>();
        qw.setEntity(entity)#foreach($field in ${table.fields})#if(${field.keyFlag}).orderByAsc("$!{field.name}");#end#end
        return success(service.list(qw));
    }

    #if($!{swagger2})
    @ApiOperation(value = "$!{table.comment}分页查询")
    #end
    @GetMapping({"page"})
    public TableDataInfo page($!{table.entityName} entity,PageDomain pageDomain){
        PageHelper.startPage(CheckPageDomain(pageDomain));
        QueryWrapper<$!{table.entityName}> qw = new QueryWrapper<$!{table.entityName}>();
        qw.setEntity(entity)#foreach($field in ${table.fields})#if(${field.keyFlag}).orderByAsc("$!{field.name}");#end#end
        return getDataTable(service.list(qw));
    }

    #if($!{swagger2})
    @ApiOperation(value = "$!{table.comment}根据主键查询")
    #end
    @GetMapping({"/getOne/{id}"})
    public AjaxResult getById(@PathVariable("id") int id) {
        return success("查询成功!",service.getById(id));
    }

    #if($!{swagger2})
    @ApiOperation(value = "$!{table.comment}新增")
    #end
    @PostMapping({"save"})
    public AjaxResult save(@RequestBody @Valid $!{table.entityName} entity) {
        return super.toAjax(service.save(entity));
    }

    #if($!{swagger2})
    @ApiOperation(value = "$!{table.comment}批量新增")
    #end
    @PostMapping({"saveBatch"})
    public AjaxResult saveBatch(@RequestBody List<$!{table.entityName}> entitys) {
        if(CollectionUtils.isEmpty(entitys)){
            return error("参数为空!");
        }
        return super.toAjax(service.saveBatch(entitys));
    }

    #if($!{swagger2})
    @ApiOperation(value = "$!{table.comment}更新")
    #end
    @PutMapping({"update"})
    public AjaxResult update(@RequestBody $!{table.entityName} entity) {
    #foreach($entity in ${table.fields})
        #if(${entity.keyFlag})##生成主键排在第一位
        #set($getId = "entity.get" + $entity.propertyName.substring(0, 1).toUpperCase() + $entity.propertyName.substring(1) + "()")
        if(Objects.isNull($getId)){
            return error("参数为空!");
        }
        var result = service.getById($getId);
        #end
    #end
        if(Objects.nonNull(result)){
            return super.toAjax(service.updateById(entity));
        }else{
            return error("数据不存在!");
        }
    }

    #if($!{swagger2})
    @ApiOperation(value = "$!{table.comment}批量更新")
    #end
    @PutMapping({"updateBatch"})
    public AjaxResult updateBatch(@RequestBody List<$!{table.entityName}> entitys) {
        if(CollectionUtils.isEmpty(entitys)){
            return error("参数为空!");
        }
        return super.toAjax(service.updateBatchById(entitys));
    }

    #if($!{swagger2})
    @ApiOperation(value = "$!{table.comment}根据主键删除")
    #end
    @DeleteMapping({"/remove/{id}"})
    public AjaxResult remove(@PathVariable("id") int id) {
        var entity = service.getById(id);
        if(Objects.nonNull(entity)){
            return super.toAjax(service.removeById(id));
        }else{
            return error("数据不存在!");
        }
    }

    #if($!{swagger2})
    @ApiOperation(value = "$!{table.comment}批量根据主键删除")
    #end
    @DeleteMapping({"/remove/{ids}"})
    public AjaxResult removeAll(@PathVariable("ids") int[] ids) {
        if (Objects.isNull(ids) || ids.length < 1){
            return error("参数为空!");
        }
        return super.toAjax(service.removeByIds(new ArrayList<>(Arrays.asList(ids))));
    }
}
#end